[%
## @file
##
## @author Sebastian Funk <sebastian.funk@lshtm.ac.uk>
## $Rev$
## $Date$
%]

[%-
mean = action.get_named_arg('mean');
cov = action.get_named_arg('cov');
rand = action.get_left;
log = action.get_named_arg('log').eval_const;
%]

[%-PROCESS action/misc/header.hpp.tt-%]

/**
 * Action: [% action.get_name %].
 */
class [% class_name %] {
public:
  [% std_action %]
  
  [% declare_action_static_function('simulate') %]
  [% declare_action_static_matrix_function('sample') %]
  [% declare_action_static_function('logdensity') %]
  [% declare_action_static_function('maxlogdensity') %]
};

#include "bi/math/view.hpp"
#include "bi/math/constant.hpp"
#include "bi/math/operation.hpp"

[% std_action_static_function('simulate') %]

[% sig_action_static_matrix_function('sample') %] {

  BOOST_AUTO(mean, [% get_var(mean) %]);
  BOOST_AUTO(cov, [% get_var(cov) %]);
  BOOST_AUTO(rand, [% get_output_var(rand) %]);

  bi::mvgaussian(rng, mean, cov, rand);
}

[% sig_action_static_function('logdensity') %] {
  [% alias_dims(action) %]
  [% fetch_parents(action) %]
  [% offset_coord(action) %]

  real xy = 0;

  [% put_output(action, 'xy') %]
}

[% sig_action_static_function('maxlogdensity') %] {
  [% alias_dims(action) %]
  [% fetch_parents(action) %]
  [% offset_coord(action) %]

  real xy = 0;
  
  [% put_output(action, 'xy') %]
}

[%-PROCESS action/misc/footer.hpp.tt-%]
